$breakpoints : (
        'sm': 600px,
        'md': 1050px,
        'lg': 1280px,
        'xl': 1536px
        //'landscape' : "screen and (orientation:landscape) ",
        //'portrait'  : "screen and (orientation:portrait) "
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    @media screen and (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  }
  @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
    @if (is-number($breakpoint)) {
      $breakpoint-value: $breakpoint + "px";
      @media screen and (max-width: ($breakpoint-value)) {
        @content;
      }
    }
  }
}

@mixin respond-above($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    @media screen and (min-width: $breakpoint-value) {
      @content;
    }
  }
  @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
    @if (is-number($breakpoint)) {
      $breakpoint-value: $breakpoint + "px";
      @media screen and (min-width: $breakpoint-value) {
        @content;
      }
    }
  }
}

@mixin respond-between($lower, $upper) {
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);
    @media screen and (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }
  }
  @else {
    @if (map-has-key($breakpoints, $lower) == false) {
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }
    @if (map-has-key($breakpoints, $upper) == false) {
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
    @if (is-number($lower) and is-number($upper)) {
      $lower-breakpoint: $lower + "px";
      $upper-breakpoint: $upper + "px";
      @media screen and (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint)) {
        @content;
      }
    }
  }
}

@function is-number($value) {
  @return type-of($value) == 'number';
}
